<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[哈哈哈]]></title>
    <url>%2F2018%2F07%2F30%2F%E5%93%88%E5%93%88%E5%93%88%2F</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F07%2F30%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[404]]></title>
    <url>%2F2018%2F07%2F29%2F404%2F</url>
    <content type="text"><![CDATA[###页面找不到了]]></content>
  </entry>
  <entry>
    <title><![CDATA[liucui]]></title>
    <url>%2F2018%2F07%2F29%2Fliucui%2F</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[刘翠]]></title>
    <url>%2F2018%2F07%2F29%2F%E5%88%98%E7%BF%A0%2F</url>
    <content type="text"><![CDATA[title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags: title: liucuidate: 2018-07-29 21:49:55 tags:]]></content>
  </entry>
  <entry>
    <title><![CDATA[WEBGL驱动的音乐展示器 - Azusa]]></title>
    <url>%2F2017%2F06%2F01%2Fazusa%2F</url>
    <content type="text"><![CDATA[懒！所以直接把 README 粘贴上来啦。最近玩 osu 把手打断啦 qwq。 项目 github Azusa A WEBGL Audio Spectrum Music Visualizer. How to use webpack 1npm install azusa --save 1import Azusa from &apos;azusa&apos; example123456789101112131415const azusa = new Azusa(&#123; view: document.getElementById(&apos;app&apos;) as HTMLCanvasElement, subdivisionSize: 1024, cutEnd: 256&#125;);azusa.audio.load(testSound, undefined, (xhr: any) =&gt; &#123; console.log((xhr.loaded / xhr.total * 100) + &apos;% loaded&apos;);&#125;);azusa.audio.Volume = 0.5;window.addEventListener(&apos;resize&apos;, () =&gt; &#123; azusa.resize(window.innerWidth, window.innerHeight);&#125;) Click here to demo]]></content>
      <categories>
        <category>发布</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>发布</tag>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[web动画框架的初步设计]]></title>
    <url>%2F2017%2F03%2F22%2Fqq%2F</url>
    <content type="text"><![CDATA[我希望有一天webApp能够达到原生应用的用户体验。 最后证实是重复造轮子，人家还比我造的好太多，大家都散了吧。 （ 让我哭一会https://github.com/berzniz/react-overdrive 第一次写这么复杂的东西，我的语文水平我自己清楚，看不懂的可以直接到下面评论区夸我了。 缘起我是怎么喜欢上material design的？ 多半是因为这张炫酷的图。 哇！炫酷！流畅！ 我立即搜索material design的前端框架，发现没有一款可以实现这种效果的。 什么？？？？ 我大前端连区区一个动画都搞不定！！！ codepen上的虽然有类似的特效，但从复用性，性能等方面考虑都没有能作为框架的。 于是开始造轮之路。 效果初步实现的效果图： 效果可能不是很好，可能是因为没有调整动画曲线，不过这都是小问题。源码需要重构，不好意思拿出来。感兴趣的话可以联系我。 思路我们将前面的炫酷ui可以分成两部分。 上面这两个界面分开来的话，相信对各位前端大神都是小菜一碟的吧。 这个框架的思路就是用程序来自动补间。 我们在每个元素身上放个key。 先记录下所有被标记的元素的位置。 页面改变后将其自动补间到新的位置。包括高度宽度等css属性。 嗯，但这个补间怎么做？js？css transition？ 显然css transition是更高效的选择，要使用css transition的前提就是页面的转换不能破坏这个元素。 现有路由库如：react-router等，都是删掉原来的元素，填入新的元素，所以css transition是行不通的。 然而我选了一种特别极端的方法，添加一个布局层。 布局层 上图红色部分就是布局层，布局层没有显示，没有动画，由路由负责管理。 图片中有内容的元素是绝对定位的，存在在布局层之上，不受路由管理，称为Plane(面)。 用程序把Plane放在对应的布局层之上，设置高度宽度，加上css transition。当布局层发送改变时，刷新Plane的位置，高度，宽度，内容。这个过程中Plane是不会被重建的于是css transition就产生了补间动画。 得益于react的 vdom 和 jsx 我们可以按正常的方式写元素，然后把他们渲染在其他地方。 再说下这个站 这个站也有布局转换的过渡效果。 可以看到布局变化后，原来的元素并没有被清理，codepen上许多方案也有这种缺陷，页面一多，就会有很多元素，肯定不行。 这篇文章的方法会真正释放掉旧的元素，也算个优点。 结尾如果你有更好的方法欢迎与我讨论。 封面画师: 秋月]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
        <tag>开源</tag>
        <tag>js</tag>
        <tag>html</tag>
      </tags>
  </entry>
</search>
